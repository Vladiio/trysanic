version: '3'

services:
    nginx: 
        image: 127.0.0.1:5000/trysanic_nginx
        build: ./docker/nginx 
        volumes:
            - "./docker/nginx/nginx.template:/etc/nginx/conf.d/default.conf"
        ports:
            - "80:80"
        depends_on:
            - web
        deploy:
            placement:
                constraints:
                    - node.role == worker

    web:
        image: 127.0.0.1:5000/trysanic_web
        build:
            context: .
            dockerfile: ./docker/web/Dockerfile
        environment:
            DB_HOST: 'db'
        volumes:
            - .:/usr/src/trysanic
        ports:
            - "8000:8000"
        depends_on:
            - db
        deploy:
            placement:
                constraints:
                    - node.role == manager
        
    db:
        image: "postgres:alpine"
        environment:
            POSTGRES_USER: "sanic" 
            POSTGRES_PASSWORD: $DB_PWD
            POSTGRES_DB: "trysanic"
        deploy:
            placement:
                constraints:
                    - node.role == worker

    worker1:
        image: 127.0.0.1:5000/trysanic_worker1
        build: 
            context: .
            dockerfile: ./docker/celery/Dockerfile
        volumes: 
            - .:/usr/src/trysanic
        environment:
            TELEGRAM_TOKEN: $TELEGRAM_TOKEN
        depends_on:
            - redis
            - rabbit
        deploy:
            placement:
                constraints:
                    - node.role == manager

    worker2:
        image: 127.0.0.1:5000/trysanic_worker2
        build: 
            context: .
            dockerfile: ./docker/celery/Dockerfile
        depends_on:
            - redis
            - rabbit
        environment:
            TELEGRAM_TOKEN: $TELEGRAM_TOKEN
        volumes: 
            - .:/usr/src/trysanic
        command: celery -A trysanic worker -l info -Q high,default
        deploy:
            placement:
                constraints:
                    - node.role == manager

    beat:
        image: 127.0.0.1:5000/trysanic_beat
        build:
            context: .
            dockerfile: ./docker/celery/Dockerfile
        volumes: 
            - .:/usr/src/trysanic
        command: celery -A trysanic beat -l info
        deploy:
            placement:
                constraints:
                    - node.role == manager

    redis:
        image: "redis:alpine"
        deploy:
            placement:
                constraints:
                    - node.role == worker

    rabbit:
        image: "rabbitmq:alpine"
        deploy:
            placement:
                constraints:
                    - node.role == worker

